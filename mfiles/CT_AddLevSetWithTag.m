function seg = CT_AddLevSetWithTag(lev_set, seg, tag, smoothing_stencil, filter_type)

if nargin<5
    filter_type = 'avg';
end

disp(['Smoothing full CT sequence, stencil: ', num2str(smoothing_stencil)])
tic
% Prepare smoothing filter
avg_filt = Get4dSmoothingKernel(smoothing_stencil, filter_type);

bb = regionprops(any(lev_set>0, 4), 'BoundingBox');
bb_mat = reshape(struct2array(bb),6,[]);
[~, i_max_vol] = max(prod(bb_mat(4:end,:),1));
bbox = ceil(bb(i_max_vol).BoundingBox);
% Add smoothing stencil to avoid out of bound smoothing
bbox = bbox([2 1 3 5 4 6]) + [-(smoothing_stencil(1:end-1)-1)/2, (smoothing_stencil(1:end-1)-1)/2];
% Make sure we are in bounds
bbox(1:3) = max(bbox(1:3),ones(1,3));
bbox(4:6) = min(bbox(4:6),size(lev_set(:,:,:,1))-bbox(1:3));
if 1 % Using CPU
    % Crop region and only smooth that
    lev_set = lev_set(...
        bbox(1):bbox(1)+bbox(4),...
        bbox(2):bbox(2)+bbox(5),...
        bbox(3):bbox(3)+bbox(6),:);
    lev_set = imfilter(lev_set, avg_filt, 'circular');
    % Put back into data.img
    seg(bbox(1):bbox(1)+bbox(4),...
        bbox(2):bbox(2)+bbox(5),...
        bbox(3):bbox(3)+bbox(6),:) =...
        seg(bbox(1):bbox(1)+bbox(4),...
        bbox(2):bbox(2)+bbox(5),...
        bbox(3):bbox(3)+bbox(6),:)...
        + int8(tag*(lev_set>0));
else % Using GPU
    % Crop region and only smooth that
    gpu_lev_set = gpuArray(...
        lev_set(bbox(1):bbox(1)+bbox(4),...
        bbox(2):bbox(2)+bbox(5),...
        bbox(3):bbox(3)+bbox(6),:));
    disp(['Smoothing full CT sequence, stencil: ', num2str(smoothing_stencil)])
    gpu_lev_set = imfilter(gpu_lev_set, avg_filt, 'circular');
    % Put back into data.img
    seg(bbox(1):bbox(1)+bbox(4),...
        bbox(2):bbox(2)+bbox(5),...
        bbox(3):bbox(3)+bbox(6),:) =...
        seg(bbox(1):bbox(1)+bbox(4),...
        bbox(2):bbox(2)+bbox(5),...
        bbox(3):bbox(3)+bbox(6),:)...
        + int8(tag*gather(gpu_lev_set>0));
end
toc
return
